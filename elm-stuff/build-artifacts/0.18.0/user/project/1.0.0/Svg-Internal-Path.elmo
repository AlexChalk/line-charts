var _user$project$Svg_Internal_Path$bool = function (bool) {
	return bool ? '0' : '1';
};
var _user$project$Svg_Internal_Path$point = function (_p0) {
	var _p1 = _p0;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(_p1.x),
		A2(
			_elm_lang$core$Basics_ops['++'],
			' ',
			_elm_lang$core$Basics$toString(_p1.y)));
};
var _user$project$Svg_Internal_Path$points = function (points) {
	return A2(
		_elm_lang$core$String$join,
		',',
		A2(_elm_lang$core$List$map, _user$project$Svg_Internal_Path$point, points));
};
var _user$project$Svg_Internal_Path$join = function (commands) {
	return A2(_elm_lang$core$String$join, ' ', commands);
};
var _user$project$Svg_Internal_Path$viewPath = function (attributes) {
	return A2(
		_elm_lang$svg$Svg$path,
		attributes,
		{ctor: '[]'});
};
var _user$project$Svg_Internal_Path$Point = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Svg_Internal_Path$toString = function (command) {
	var _p2 = command;
	switch (_p2.ctor) {
		case 'Move':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'M',
				_user$project$Svg_Internal_Path$point(_p2._0));
		case 'Line':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'L',
				_user$project$Svg_Internal_Path$point(_p2._0));
		case 'CubicBeziers':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'C',
				_user$project$Svg_Internal_Path$points(
					{
						ctor: '::',
						_0: _p2._0,
						_1: {
							ctor: '::',
							_0: _p2._1,
							_1: {
								ctor: '::',
								_0: _p2._2,
								_1: {ctor: '[]'}
							}
						}
					}));
		case 'CubicBeziersShort':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'Q',
				_user$project$Svg_Internal_Path$points(
					{
						ctor: '::',
						_0: _p2._0,
						_1: {
							ctor: '::',
							_0: _p2._1,
							_1: {ctor: '[]'}
						}
					}));
		case 'QuadraticBeziers':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'Q',
				_user$project$Svg_Internal_Path$points(
					{
						ctor: '::',
						_0: _p2._0,
						_1: {
							ctor: '::',
							_0: _p2._1,
							_1: {ctor: '[]'}
						}
					}));
		case 'QuadraticBeziersShort':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'T',
				_user$project$Svg_Internal_Path$point(_p2._0));
		case 'Arc':
			return A2(
				_elm_lang$core$Basics_ops['++'],
				'A',
				_user$project$Svg_Internal_Path$join(
					{
						ctor: '::',
						_0: _user$project$Svg_Internal_Path$point(
							A2(_user$project$Svg_Internal_Path$Point, _p2._0, _p2._1)),
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Basics$toString(_p2._2),
							_1: {
								ctor: '::',
								_0: _user$project$Svg_Internal_Path$bool(_p2._3),
								_1: {
									ctor: '::',
									_0: _user$project$Svg_Internal_Path$bool(_p2._4),
									_1: {
										ctor: '::',
										_0: _user$project$Svg_Internal_Path$point(_p2._5),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}));
		default:
			return 'Z';
	}
};
var _user$project$Svg_Internal_Path$Close = {ctor: 'Close'};
var _user$project$Svg_Internal_Path$Arc = F6(
	function (a, b, c, d, e, f) {
		return {ctor: 'Arc', _0: a, _1: b, _2: c, _3: d, _4: e, _5: f};
	});
var _user$project$Svg_Internal_Path$QuadraticBeziersShort = function (a) {
	return {ctor: 'QuadraticBeziersShort', _0: a};
};
var _user$project$Svg_Internal_Path$QuadraticBeziers = F2(
	function (a, b) {
		return {ctor: 'QuadraticBeziers', _0: a, _1: b};
	});
var _user$project$Svg_Internal_Path$CubicBeziersShort = F2(
	function (a, b) {
		return {ctor: 'CubicBeziersShort', _0: a, _1: b};
	});
var _user$project$Svg_Internal_Path$CubicBeziers = F3(
	function (a, b, c) {
		return {ctor: 'CubicBeziers', _0: a, _1: b, _2: c};
	});
var _user$project$Svg_Internal_Path$Line = function (a) {
	return {ctor: 'Line', _0: a};
};
var _user$project$Svg_Internal_Path$Move = function (a) {
	return {ctor: 'Move', _0: a};
};
var _user$project$Svg_Internal_Path$translate = F2(
	function (system, command) {
		var _p3 = command;
		switch (_p3.ctor) {
			case 'Move':
				return _user$project$Svg_Internal_Path$Move(
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0));
			case 'Line':
				return _user$project$Svg_Internal_Path$Line(
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0));
			case 'CubicBeziers':
				return A3(
					_user$project$Svg_Internal_Path$CubicBeziers,
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0),
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._1),
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._2));
			case 'CubicBeziersShort':
				return A2(
					_user$project$Svg_Internal_Path$CubicBeziersShort,
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0),
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._1));
			case 'QuadraticBeziers':
				return A2(
					_user$project$Svg_Internal_Path$QuadraticBeziers,
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0),
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._1));
			case 'QuadraticBeziersShort':
				return _user$project$Svg_Internal_Path$QuadraticBeziersShort(
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._0));
			case 'Arc':
				return A6(
					_user$project$Svg_Internal_Path$Arc,
					A3(_user$project$Svg_Coordinate$toSVG, _user$project$Svg_Coordinate$X, system, _p3._0),
					A3(_user$project$Svg_Coordinate$toSVG, _user$project$Svg_Coordinate$Y, system, _p3._1),
					_p3._2,
					_p3._3,
					_p3._4,
					A2(_user$project$Svg_Coordinate$toSVGPoint, system, _p3._5));
			default:
				return _user$project$Svg_Internal_Path$Close;
		}
	});
var _user$project$Svg_Internal_Path$description = F2(
	function (system, commands) {
		return _user$project$Svg_Internal_Path$join(
			A2(
				_elm_lang$core$List$map,
				function (_p4) {
					return _user$project$Svg_Internal_Path$toString(
						A2(_user$project$Svg_Internal_Path$translate, system, _p4));
				},
				commands));
	});
var _user$project$Svg_Internal_Path$view = F3(
	function (system, attributes, commands) {
		return _user$project$Svg_Internal_Path$viewPath(
			A2(
				_elm_lang$core$Basics_ops['++'],
				attributes,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$d(
						A2(_user$project$Svg_Internal_Path$description, system, commands)),
					_1: {ctor: '[]'}
				}));
	});
