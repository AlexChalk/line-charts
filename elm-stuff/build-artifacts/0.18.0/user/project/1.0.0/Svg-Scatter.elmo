var _user$project$Svg_Scatter$viewCircle = F4(
	function (_p0, config, system, data) {
		var _p1 = _p0;
		return A2(
			_elm_lang$svg$Svg$circle,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$cx(
					_elm_lang$core$Basics$toString(
						A3(
							_user$project$Svg_Coordinate$toSVG,
							_user$project$Svg_Coordinate$X,
							system,
							config.x.variable(data)))),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$cy(
						_elm_lang$core$Basics$toString(
							A3(
								_user$project$Svg_Coordinate$toSVG,
								_user$project$Svg_Coordinate$Y,
								system,
								config.y.variable(data)))),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$r(
							_elm_lang$core$Basics$toString(_p1.radius)),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill(_p1.color),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Svg_Scatter$viewShape = function (scatter) {
	var _p2 = scatter.dot.shape;
	if (_p2.ctor === 'Circle') {
		return _user$project$Svg_Scatter$viewCircle(scatter.dot);
	} else {
		return F3(
			function (_p5, _p4, _p3) {
				return _elm_lang$svg$Svg$text('');
			});
	}
};
var _user$project$Svg_Scatter$viewScatter = F3(
	function (config, system, scatter) {
		var shapes = A2(
			_elm_lang$core$List$map,
			A3(_user$project$Svg_Scatter$viewShape, scatter, config, system),
			scatter.data);
		return A2(
			_elm_lang$svg$Svg$g,
			{ctor: '[]'},
			shapes);
	});
var _user$project$Svg_Scatter$view = F2(
	function (config, scatters) {
		var data = A2(
			_elm_lang$core$List$concatMap,
			function (_) {
				return _.data;
			},
			scatters);
		var system = {
			frame: config.frame,
			x: A2(_user$project$Svg_Coordinate$limits, config.x.variable, data),
			y: A2(_user$project$Svg_Coordinate$limits, config.y.variable, data)
		};
		return A2(
			_elm_lang$svg$Svg$svg,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$width(
					_elm_lang$core$Basics$toString(config.frame.size.width)),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height(
						_elm_lang$core$Basics$toString(config.frame.size.height)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$g,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						A2(_user$project$Svg_Scatter$viewScatter, config, system),
						scatters)),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Svg_Internal_Axis$viewHorizontal, system, config.x.look),
					_1: {
						ctor: '::',
						_0: A2(_user$project$Svg_Internal_Axis$viewVertical, system, config.y.look),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _user$project$Svg_Scatter$scatter = F2(
	function (dot, data) {
		return {dot: dot, data: data};
	});
var _user$project$Svg_Scatter$Scatter = F2(
	function (a, b) {
		return {dot: a, data: b};
	});
var _user$project$Svg_Scatter$Dot = F3(
	function (a, b, c) {
		return {radius: a, color: b, shape: c};
	});
var _user$project$Svg_Scatter$Config = F3(
	function (a, b, c) {
		return {frame: a, x: b, y: c};
	});
var _user$project$Svg_Scatter$Star = {ctor: 'Star'};
var _user$project$Svg_Scatter$Plus = {ctor: 'Plus'};
var _user$project$Svg_Scatter$Cross = {ctor: 'Cross'};
var _user$project$Svg_Scatter$Circle = {ctor: 'Circle'};
var _user$project$Svg_Scatter$Square = {ctor: 'Square'};
var _user$project$Svg_Scatter$Diamond = {ctor: 'Diamond'};
var _user$project$Svg_Scatter$Triangle = {ctor: 'Triangle'};
