var _user$project$Internal_Axis$isPositive = function (direction) {
	var _p0 = direction;
	if (_p0.ctor === 'Positive') {
		return true;
	} else {
		return false;
	}
};
var _user$project$Internal_Axis$viewVerticalLabel = F4(
	function (system, _p1, position, view) {
		var _p2 = _p1;
		var _p3 = _p2.direction;
		var offset = _user$project$Internal_Axis$isPositive(_p3) ? 10 : -10;
		var anchorOfLabel = _user$project$Internal_Axis$isPositive(_p3) ? 'text-anchor: start;' : 'text-anchor: end;';
		return A2(
			_elm_lang$svg$Svg$g,
			{
				ctor: '::',
				_0: A5(_user$project$Plot_Coordinate$placeWithOffset, system, position.x, position.y, offset, 5),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$style(anchorOfLabel),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: view,
				_1: {ctor: '[]'}
			});
	});
var _user$project$Internal_Axis$viewHorizontalLabel = F4(
	function (system, _p4, position, view) {
		var _p5 = _p4;
		var offset = _user$project$Internal_Axis$isPositive(_p5.direction) ? -10 : 20;
		return A2(
			_elm_lang$svg$Svg$g,
			{
				ctor: '::',
				_0: A5(_user$project$Plot_Coordinate$placeWithOffset, system, position.x, position.y, 0, offset),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$style('text-anchor: middle;'),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: view,
				_1: {ctor: '[]'}
			});
	});
var _user$project$Internal_Axis$lengthOfTick = F2(
	function (_p6, length) {
		var _p7 = _p6;
		return _user$project$Internal_Axis$isPositive(_p7.direction) ? (0 - length) : length;
	});
var _user$project$Internal_Axis$viewVerticalTick = F4(
	function (system, view, _p9, _p8) {
		var _p10 = _p9;
		var _p11 = _p8;
		return A5(
			_user$project$Internal_Primitives$yTick,
			system,
			A2(_user$project$Internal_Axis$lengthOfTick, view, _p11.length),
			_p11.attributes,
			_p10.x,
			_p10.y);
	});
var _user$project$Internal_Axis$viewHorizontalTick = F4(
	function (system, view, _p13, _p12) {
		var _p14 = _p13;
		var _p15 = _p12;
		return A5(
			_user$project$Internal_Primitives$xTick,
			system,
			A2(_user$project$Internal_Axis$lengthOfTick, view, _p15.length),
			_p15.attributes,
			_p14.y,
			_p14.x);
	});
var _user$project$Internal_Axis$viewVertical = F2(
	function (system, axis) {
		var axisPosition = axis.position(system.x) - A3(_user$project$Plot_Coordinate$scaleCartesian, _user$project$Plot_Coordinate$X, system, axis.offset);
		var at = function (y) {
			return {x: axisPosition, y: y};
		};
		var viewMark = function (_p16) {
			var _p17 = _p16;
			var _p18 = _p17.position;
			return A2(
				_elm_lang$svg$Svg$g,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$class('mark'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_user$project$Internal_Utils$viewMaybe,
						_p17.tick,
						A3(
							_user$project$Internal_Axis$viewVerticalTick,
							system,
							axis,
							at(_p18))),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Internal_Utils$viewMaybe,
							_p17.label,
							A3(
								_user$project$Internal_Axis$viewVerticalLabel,
								system,
								axis,
								at(_p18))),
						_1: {ctor: '[]'}
					}
				});
		};
		var viewAxisLine = function (_p19) {
			var _p20 = _p19;
			return A5(_user$project$Internal_Primitives$vertical, system, _p20.attributes, axisPosition, _p20.start, _p20.end);
		};
		return A2(
			_elm_lang$svg$Svg$g,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$class('axis--vertical'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_user$project$Internal_Utils$viewMaybe,
					axis.line,
					function (_p21) {
						return viewAxisLine(
							A2(_user$project$Internal_Utils$apply, system.y, _p21));
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$g,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$class('marks'),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$map,
							viewMark,
							A2(_user$project$Internal_Utils$apply, system.y, axis.marks))),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Internal_Axis$viewHorizontal = F2(
	function (system, axis) {
		var axisPosition = axis.position(system.y) - A3(_user$project$Plot_Coordinate$scaleCartesian, _user$project$Plot_Coordinate$Y, system, axis.offset);
		var at = function (x) {
			return {x: x, y: axisPosition};
		};
		var viewMark = function (_p22) {
			var _p23 = _p22;
			var _p24 = _p23.position;
			return A2(
				_elm_lang$svg$Svg$g,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$class('mark'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_user$project$Internal_Utils$viewMaybe,
						_p23.tick,
						A3(
							_user$project$Internal_Axis$viewHorizontalTick,
							system,
							axis,
							at(_p24))),
					_1: {
						ctor: '::',
						_0: A2(
							_user$project$Internal_Utils$viewMaybe,
							_p23.label,
							A3(
								_user$project$Internal_Axis$viewHorizontalLabel,
								system,
								axis,
								at(_p24))),
						_1: {ctor: '[]'}
					}
				});
		};
		var viewAxisLine = function (_p25) {
			var _p26 = _p25;
			return A5(_user$project$Internal_Primitives$horizontal, system, _p26.attributes, axisPosition, _p26.start, _p26.end);
		};
		return A2(
			_elm_lang$svg$Svg$g,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$class('axis--horizontal'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_user$project$Internal_Utils$viewMaybe,
					axis.line,
					function (_p27) {
						return viewAxisLine(
							A2(_user$project$Internal_Utils$apply, system.x, _p27));
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$g,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$class('marks'),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$map,
							viewMark,
							A2(_user$project$Internal_Utils$apply, system.x, axis.marks))),
					_1: {ctor: '[]'}
				}
			});
	});
